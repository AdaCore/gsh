* repeat a command 5 times
repeat 4 times more
repeat 3 times more
repeat 2 times more
repeat 1 times more
repeat 0 times more

* all the following should print 42

simple=$((x_is_21 + 21)) is 42
dollared=$(($x_is_21 + 21)) is 42
braced=$((${x_is_21} + 21)) is 42

variable as second argument
simple=$((21 + x_is_21)) is 42
dollared=$((21 + $x_is_21)) is 42
braced=$((21 +      ${x_is_21} )) is 42

* no spaces
$((10*4+2)) is 42
$((x_is_21+x_is_21)) is 42

* multiple spaces and parantheses
$(( 10 *    (4+2 ) - ((40 / 2)   + 2 -2 )  + (2)  )) is 42

* recursive
$(($((10*4+2)))) is 42
$(( $((10*4)) +2)) is 42

* unary + / -
$(( +4 - 8 )) is -4
$(( -4 + 8 )) is 4
$((3 + + 4)) is 7
$((3 - - 4)) is 7

* test operators == and !=
$(( 10==10 )) is 1
$(( 10 != 10 )) is 0
$(( x==10 )) is 1
$(( x!=10 )) is 0

* different treatment of '10' and x
x is 3 + 4 * 2
$(( 2 * $x)) is 14 and must be 14
$(( 2 * x)) is 22 and must be 22

affectation
$(( y = z )) is 20
$(( y = y + z +2 )) with init y=20 and z=20 : 42 (new y=42)

affectation using undefined variable
$(( undef = z )) is 20
$(( y = undef_2 )) is 0
